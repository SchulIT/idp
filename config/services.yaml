# This file is the entry point to configure your own services.p
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

imports:
    - { resource: version.yaml }

parameters:
    commonmark.config:
        renderer:
            block_separator: "\n"
            inner_separator: "\n"
            soft_break: "\n"
        commonmark:
            enable_em: true,
            enable_strong: true,
            use_asterisk: true,
            use_underscore: true,
        html_input: 'escape'
        allow_unsafe_links: false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Request/'
            - '../src/Response/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    _instanceof:
        App\HealthCheck\HealthCheckInterface:
            tags: [ 'app.health_check' ]

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            $pdoOrDsn: '%env(DATABASE_URL)%'

    Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider:
        arguments:
            $conn: "@doctrine.dbal.default_connection"

    # Authentication
    App\Security\UserAuthenticator:
        arguments:
          $isActiveDirectoryEnabled: "%env(bool:ADAUTH_ENABLED)%"
          $logger: "@monolog.logger.auth"
          $loginRoute: 'login'
          $checkRoute: 'login_check'

    # Menu
    App\Menu\Builder:
      arguments:
          $adAuthEnabled: '%env(bool:ADAUTH_ENABLED)%'
      tags:
          - { name: knp_menu.menu_builder, method: mainMenu, alias: mainMenu }
          - { name: knp_menu.menu_builder, method: userMenu, alias: userMenu }
          - { name: knp_menu.menu_builder, method: adminMenu, alias: adminMenu }
          - { name: knp_menu.menu_builder, method: servicesMenu, alias: servicesMenu }

    SchulIT\CommonBundle\Menu\Voter:
        tags:
            - { name: knp_menu.voter }

    # Two factor
    Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceManager:
      alias: scheb_two_factor.default_trusted_device_manager

    # Firewall map
    Symfony\Bundle\SecurityBundle\Security\FirewallMap:
      alias: security.firewall.map

    # LightSAML overrides
    # Note: these services override existing services provided by LightSAML. This is necessary in order to properly
    # resolve attributes for a user.
    LightSaml\Provider\NameID\NameIdProviderInterface:
        public: true
        class: App\Saml\NameIdProvider
        autowire: true
        arguments:
            $entityDescriptorProvider: "@lightsaml.own.entity_descriptor_provider"

    LightSaml\Provider\Attribute\AttributeValueProviderInterface:
        public: true
        class: App\Saml\AttributeValueProvider
        autowire: true

    LightSaml\SymfonyBridgeBundle\Bridge\Container\BuildContainer:
        alias: 'lightsaml.container.build'

    # Controllers
    App\Controller\IdpController:
        bind:
            $kernelProjectDir: '%kernel.project_dir%'
            $provider: '@lightsaml.own.entity_descriptor_provider'

    App\Controller\MetadataController:
        bind:
            $provider: '@lightsaml.own.entity_descriptor_provider'

    SchulIT\CommonBundle\Command\CreateCertificateCommand:
        arguments:
            $types:
                saml:
                    keyFile: '%idp_cert_key%'
                    certFile: '%idp_cert_file%'

    # Health Check
    App\HealthCheck\IdentityProviderCertificateCheck:
        arguments:
            $certificateFile: '%kernel.project_dir%/certs/idp.crt'

    App\HealthCheck\HealthCheckService:
        arguments:
            $checks: !tagged 'app.health_check'


    # Dark mode
    SchulIT\CommonBundle\DarkMode\DarkModeManagerInterface:
        class: App\DarkMode\DarkModeManager

    # Markdown
    League\CommonMark\Extension\CommonMarkCoreExtension: ~

    League\CommonMark\EnvironmentInterface:
        class: League\CommonMark\Environment
        arguments:
            $config: "%commonmark.config%"
        calls:
            - [ addExtension, [ "@League\\CommonMark\\Extension\\CommonMarkCoreExtension" ] ]

    League\CommonMark\MarkdownConverterInterface:
        class: League\CommonMark\MarkdownConverter
        arguments:
            $environment: "@League\\CommonMark\\EnvironmentInterface"

    # FORM FLOW


    # Security
    App\Security\CronUserProvider:
        arguments:
            $username: 'cron'
            $password: '%env(CRON_PASSWORD)%'

    Symfony\Component\Security\Core\User\UserProviderInterface:
        alias: 'security.user.provider.concrete.database'

    App\Security\EventListener\AuthenticationAuditEventSubscriber:
        arguments:
            $isEnabled: '%env(bool:AUTH_AUDIT_ENABLED)%'

    App\Command\ClearAuthenticationAuditLogCommand:
        arguments:
            $days: '%env(int:AUTH_AUDIT_RETENTION_DAYS)%'

    # Migrations
    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    App\Migrations\Factory\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments: [ '@App\Migrations\Factory\MigrationFactoryDecorator.inner', '@doctrine.orm.entity_manager' ]

    App\EventSubscriber\LoadMessengerCronJobs:
        arguments:
            $command: '@console.command.messenger_consume_messages'

    # Monolog
    SchulIT\CommonBundle\Monolog\DatabaseHandler:
        arguments:
            $connection: '@doctrine.dbal.logger_connection'
        calls:
            - setFormatter: [ '@SchulIT\CommonBundle\Monolog\LineFormatter' ]

    SchulIT\CommonBundle\Monolog\LineFormatter: ~

    # TWIG
    App\Twig\WebpackEntryCssSourceExtension:
        bind:
            $publicDir: '%kernel.project_dir%/public'

    # BROWSCAP
    cache.browscap.psr16:
        class: Symfony\Component\Cache\Psr16Cache
        bind:
            $pool: '@cache.browscap'

    BrowscapPHP\Browscap:
        bind:
            $cache: '@cache.browscap.psr16'
            $logger: '@monolog.logger.browscap'

    BrowscapPHP\BrowscapUpdater:
        bind:
            $cache: '@cache.browscap.psr16'
            $logger: '@monolog.logger.browscap'

    Zenstruck\Messenger\Monitor\Command\PurgeCommand:
        tags:
            - { name: shapecode_cron.cron_job, expression: '@daily' }
