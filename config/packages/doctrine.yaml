parameters:
    # Adds a fallback DATABASE_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(DATABASE_URL): ''

doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                url: '%env(resolve:DATABASE_URL)%'
                driver: 'pdo_mysql'
                server_version: '%env(resolve:DATABASE_SERVER_VERSION)%'
                charset: utf8mb4
                schema_filter: ~^(?!(sessions|rememberme_token|session_user))~ # exclude session and rememberme_token table
                use_savepoints: true
                default_table_options:
                    charset: utf8mb4
                    collate: utf8mb4_unicode_ci
            logger:
                url: '%env(resolve:DATABASE_URL)%'
                charset: utf8mb4
                driver: 'pdo_mysql'
                server_version: '%env(resolve:DATABASE_SERVER_VERSION)%'
                use_savepoints: true
                default_table_options:
                    charset: utf8mb4
                    collate: utf8mb4_unicode_ci

    orm:
        auto_generate_proxy_classes: true
        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware
        auto_mapping: true
        enable_lazy_ghost_objects: true
        controller_resolver:
            auto_mapping: false
        mappings:
            App:
                is_bundle: false
                type: attribute
                dir: '%kernel.project_dir%/src/Entity'
                prefix: 'App\Entity'
                alias: App
        dql:
            string_functions:
                JSON_VALUE: Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mariadb\JsonValue

when@prod:
    doctrine:
        orm:
            auto_generate_proxy_classes: false
            query_cache_driver:
                type: pool
                pool: doctrine.system_cache_pool
            result_cache_driver:
                type: pool
                pool: doctrine.result_cache_pool

    framework:
        cache:
            pools:
                doctrine.result_cache_pool:
                    adapter: cache.app
                doctrine.system_cache_pool:
                    adapter: cache.system
